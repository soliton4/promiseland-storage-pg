var scan = require "./tablescan";
var sql = require "sql";

var canConvert = (parExisting, parNew){
  
};

return (par){
  
  var con = par.connection;
  var table = par.table;
  var indexes = par.indexes;
  var pk = par.pk;
  
  var existing = *scan({
    connection: con,
    name: table.getName(),
    schema: table.getSchema()
  });
  
  var createTable = true;
  var dif = false;
  var droptemp = false;
  if (existing){
    var excols = existing.table.columns;
    var cols = table.columns;
    var i = 0;
    if (cols.length == excols.length){
      for (i = 0; i < cols.length; ++i){
        if (cols[0].name != excols[0].name){
          dif = true;
          break;
        };
        if (cols[0].dataType != excols[0].dataType){
          dif = true;
          break;
        };
      };
    }else{
      dif = true;
    };
    if (dif){
      *con.query(existing.table.alter().rename(table.getName() + '_temp_rename'));
      droptemp = true;
    }else{
      createTable = false;
    };
  };
  
  if (createTable){
    *con.query(table.create());
  };
  
  if (existing && dif){
    /*for (i = 0; i < cols.length; ++i){
      if (cols[0].name != excols[0].name){
        dif = true;
        break;
      };
      if (cols[0].dataType != excols[0].dataType){
        dif = true;
        break;
      };
    };*/
    /*post.insert(post.content, post.userId)
      .select('\'test\'', user.id).from(user).where(user.name.like('A%')),
      */
  };
  
  if (droptemp){
    sql.setDialect("postgres");
    var dropOld = sql.define({
      name: table.getName() + '_temp_rename',
      schema: table.getSchema()
      // columns: ['table_schema', 'table_name', 'table_type']
    });
    *con.query(dropOld.drop());
  };
  
};
